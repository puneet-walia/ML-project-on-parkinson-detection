# -*- coding: utf-8 -*-
"""parkinson detection

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EnCk7BV1ikVfxEXCIxUYFbqqJS6rTUn2
"""

import numpy as np
import pandas as pd
from sklearn import svm
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split

df=pd.read_csv('parkinsons.data')

df

df.head()

pd.set_option('display.max_columns',None)
pd.set_option('display.max_rows',None)
df

df.info()

df.describe()

df.shape

df.isnull().sum()

df['status'].value_counts()

df.groupby('status').mean()

x= df.drop(columns=['name','status'],axis=1)
Y = df['status']

print(x)

print(Y)

x_train,x_test,Y_train,Y_test=train_test_split(x,Y,test_size=0.2,random_state=2)

print(x.shape,x_train.shape,x_test.shape)

ss=StandardScaler()
ss.fit(x_train)

x_train=ss.transform(x_train)
x_test=ss.transform(x_test)

print(x_train)

print(x_test)

model=svm.SVC(kernel='linear')

model.fit(x_train,Y_train)

X_train_pre=model.predict(x_train)
train_data_acc=accuracy_score(Y_train,X_train_pre)

print("accuracy is :",train_data_acc)

x_test_pre = model.predict(x_test)
test_data_acc=accuracy_score(Y_test,x_test_pre)

print("accuracy of test: ",test_data_acc)

input_data=(122.40000,148.65000,113.81900,0.00968,0.00008,0.00465,0.00696,0.01394,0.06134,0.62600,0.03134,0.04518,0.04368,0.09403,0.01929,19.08500,0.458359,0.819521,-4.075192,0.335590,2.486855,0.368674)

input_data_np=np.asarray(input_data)

input_data_re=input_data_np.reshape(1,-1)

ss_data=ss.transform(input_data_re)

pred=model.predict(ss_data)

print(pred)

if (pred[0]==0):
  print("negative, no parkinson found")
else:
  print("positive, parkinson found")